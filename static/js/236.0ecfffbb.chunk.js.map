{"version":3,"file":"static/js/236.0ecfffbb.chunk.js","mappings":"+QAMMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIZC,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,KAAMF,EAAAA,GACI,gEACPG,SAAS,2BACZC,MAAOJ,EAAAA,GACG,oBACPI,MAAM,uBACND,SAAS,4BACZE,SAAUL,EAAAA,GACA,uBACPM,IAAI,EAAG,qDACPH,SAAS,gCAGRI,EAAgB,CACpBL,KAAM,GACNE,MAAO,GACPC,SAAU,IAGCG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAiBjB,OACE,4BACE,iJACA,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBZ,EAClBa,SArBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GACEM,EAAAA,EAAAA,IAAS,CACPb,KAAMW,EAAOX,KACbE,MAAOS,EAAOT,MACdC,SAAUQ,EAAOR,YAGlBW,SACAC,MAAK,kBAAMC,IAAAA,OAAAA,QAAwB,gCAA9B,IACLC,OAAM,kBAAMD,IAAAA,OAAAA,QAAwB,4BAA9B,IACTE,QAAQC,IAAIR,GACZC,GACD,EAKG,UAKE,UAAC,KAAD,CAAMQ,MAAO9B,EAAOC,KAAM8B,aAAa,MAAvC,WACE,mBAAOD,MAAO9B,EAAOG,MAArB,gCAEE,SAAC,KAAD,CAAO6B,KAAK,OAAOtB,KAAK,UACxB,SAAC,KAAD,CAAcA,KAAK,aAGrB,mBAAOoB,MAAO9B,EAAOG,MAArB,4CAEE,SAAC,KAAD,CAAO6B,KAAK,QAAQtB,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,cAGrB,mBAAOoB,MAAO9B,EAAOG,MAArB,kDAEE,SAAC,KAAD,CAAO6B,KAAK,WAAWtB,KAAK,cAC5B,SAAC,KAAD,CAAcA,KAAK,iBAErB,mBAAQsB,KAAK,SAAb,iIAKT,ECpFc,SAASC,IACtB,OACE,+BACE,SAACjB,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { Field, Form, Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { register } from 'redux/auth/authOperations';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nconst RegisterSchema = yup.object().shape({\n  name: yup\n    .string(' Name may contain only letters, apostrophe, dash and spaces.')\n    .required('Name is required field.'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required field.'),\n  password: yup\n    .string('Enter your password')\n    .min(5, 'Password should be of minimum 5 characters length')\n    .required('Password is required field'),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    )\n      .unwrap()\n      .then(() => Notiflix.Notify.success('Registration is successfully!'))\n      .catch(() => Notiflix.Notify.warning('Something went wrong...:('));\n    console.log(values);\n    resetForm();\n  };\n\n  return (\n    <div>\n      <h1>Страница регистрации</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={RegisterSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form style={styles.form} autoComplete=\"off\">\n          <label style={styles.label}>\n            Имя\n            <Field type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" />\n          </label>\n\n          <label style={styles.label}>\n            Почта\n            <Field type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" />\n          </label>\n\n          <label style={styles.label}>\n            Пароль\n            <Field type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" />\n          </label>\n          <button type=\"submit\">Зарегистрироваться</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["styles","form","width","label","display","flexDirection","marginBottom","RegisterSchema","yup","shape","name","required","email","password","min","initialValues","RegisterForm","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","register","unwrap","then","Notiflix","catch","console","log","style","autoComplete","type","Register"],"sourceRoot":""}