{"version":3,"file":"static/js/284.0b1ed168.chunk.js","mappings":"qVAEaA,EAAcC,EAAAA,EAAAA,QAAH,6bAgBXC,EAAQD,EAAAA,EAAAA,GAAH,0FAMLE,EAAgBF,EAAAA,EAAAA,GAAH,mEAKbG,EAAYH,EAAAA,EAAAA,GAAH,mIAQTI,EAAWJ,EAAAA,EAAAA,GAAH,0FAMRK,EAAcL,EAAAA,EAAAA,QAAH,oX,qKCxCXM,GAAQN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,kEAKLQ,GAAWR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAH,uIAQRU,GAAQV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,qYAkBLY,EAAaZ,EAAAA,EAAAA,MAAH,gHAMVa,EAAYb,EAAAA,EAAAA,OAAH,+kBA2BTc,EAAWd,EAAAA,EAAAA,EAAH,+GAQRe,EAAiBf,EAAAA,EAAAA,IAAH,sFAMdgB,EAAahB,EAAAA,EAAAA,KAAH,8C,8BC/DjBiB,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,GACG,oBACPE,MAAM,uBACNC,SAAS,4BACZC,SAAUJ,EAAAA,GACA,uBACPK,IAAI,EAAG,qDACPF,SAAS,kDAGRG,EAAgB,CACpBC,KAAM,GACNL,MAAO,GACPE,SAAU,IAGCI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAgBjB,OACE,UAAC,KAAD,YACE,4DACA,SAAC,KAAD,CACEJ,cAAeA,EACfK,iBAAkBZ,EAClBa,SArBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GACEM,EAAAA,EAAAA,IAAM,CACJR,KAAMM,EAAON,KACbL,MAAOW,EAAOX,MACdE,SAAUS,EAAOT,YAGlBY,SACAC,MAAK,kBAAMC,IAAAA,OAAAA,QAAwB,gCAA9B,IACLC,OAAM,kBAAMD,IAAAA,OAAAA,QAAwB,4BAA9B,IACTE,QAAQC,IAAIR,GACZC,GACD,EAKG,UAKE,UAACxB,EAAD,CAAUgC,aAAa,MAAvB,WACE,UAAC5B,EAAD,YACE,SAACI,EAAD,qBACA,UAACD,EAAD,YACE,SAACD,EAAD,WACE,SAAC,MAAD,OAEF,SAACJ,EAAD,CAAO+B,KAAK,QAAQhB,KAAK,WACzB,SAACnB,EAAD,CAAOmB,KAAK,QAAQiB,UAAU,eAGlC,UAAC9B,EAAD,YACE,SAACI,EAAD,wBACA,UAACD,EAAD,YACE,SAACD,EAAD,WACE,SAAC,MAAD,OAEF,SAACJ,EAAD,CAAO+B,KAAK,WAAWhB,KAAK,cAC5B,SAACnB,EAAD,CAAOmB,KAAK,WAAWiB,UAAU,eAGrC,SAAC7B,EAAD,CAAW4B,KAAK,SAAhB,2BAKT,ECpFc,SAASE,IACtB,OACE,+BACE,SAACjB,EAAD,KAGL,C","sources":["components/App/App.styled.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n  margin: 30px auto;\n  width: fit-content;\n  background-color: #2a2b38;\n  background-image: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1462889/pat.svg');\n  border-radius: 5px;\n  background-position: bottom center;\n  background-repeat: no-repeat;\n  background-size: 300%;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 24px;\n  color: #ffeba7;\n  text-align: center;\n`;\n\nexport const ContactsTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #c4c3ca;\n`;\n\nexport const TitleHome = styled.h1`\n  margin-bottom: 24px;\n  color: #ffeba7;\n  font-size: 40px;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const TextHome = styled.h2`\n  margin-bottom: 20px;\n  color: #c4c3ca;\n  text-align: center;\n`;\n\nexport const MainWrapper = styled.section`\n  background-color: #2a2b38;\n  opacity: 0.8;\n  margin-top: 40px;\n  padding: 40px 5px;\n  background-image: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1462889/pat.svg');\n  border-radius: 5px;\n  background-position: bottom center;\n  background-repeat: no-repeat;\n  background-size: 300%;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n`;\n","import styled from '@emotion/styled';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const Error = styled(ErrorMessage)`\n  color: #ffeba7;\n  text-align: center;\n`;\n\nexport const FormWrap = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n\nexport const Input = styled(Field)`\n  width: 300px;\n  font-size: 16px;\n  border-radius: 5px;\n  padding: 13px 20px;\n  padding-left: 55px;\n  font-weight: 500;\n  border-radius: 4px;\n  line-height: 22px;\n  letter-spacing: 0.5px;\n  outline: none;\n  color: #c4c3ca;\n  background-color: #1f2029;\n  border: none;\n  transition: all 200ms linear;\n  box-shadow: 0 4px 8px 0 rgba(21, 21, 21, 0.2);\n`;\n\nexport const LabelInput = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  color: #c4c3ca;\n`;\nexport const BtnSubmit = styled.button`\n  border-radius: 4px;\n  height: 44px;\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  transition: all 200ms linear;\n  padding: 0 30px;\n  letter-spacing: 1px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border: none;\n  cursor: pointer;\n  background-color: #ffeba7;\n  color: #102770;\n  box-shadow: 0 8px 24px 0 rgba(255, 235, 167, 0.2);\n\n  &:focus,\n  &:hover {\n    background-color: #102770;\n    color: #ffeba7;\n    box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\n  }\n`;\n\nexport const IconUser = styled.i`\n  position: relative;\n  top: 0;\n  left: 10%;\n  font-size: 18px;\n  color: #ffeba7;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nexport const TitleLable = styled.span`\n  margin-left: 20px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport Notiflix from 'notiflix';\nimport { logIn } from 'redux/auth/authOperations';\nimport {\n  BtnSubmit,\n  Error,\n  FormWrap,\n  IconUser,\n  Input,\n  InputContainer,\n  LabelInput,\n  TitleLable,\n} from './LoginForm.styled';\nimport { FiPhone } from 'react-icons/fi';\nimport { MainSection } from 'components/App/App.styled';\n\nconst LoginSchema = yup.object().shape({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required field.'),\n  password: yup\n    .string('Enter your password')\n    .min(5, 'Password should be of minimum 5 characters length')\n    .required('Password is required field, min 5 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      logIn({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    )\n      .unwrap()\n      .then(() => Notiflix.Notify.success('Registration is successfully!'))\n      .catch(() => Notiflix.Notify.warning('Something went wrong...:('));\n    console.log(values);\n    resetForm();\n  };\n\n  return (\n    <MainSection>\n      <h1>Hello! Happy to see you again!</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={LoginSchema}\n        onSubmit={handleSubmit}\n      >\n        <FormWrap autoComplete=\"off\">\n          <LabelInput>\n            <TitleLable>Email</TitleLable>\n            <InputContainer>\n              <IconUser>\n                <FiPhone />\n              </IconUser>\n              <Input type=\"email\" name=\"email\" />\n              <Error name=\"email\" component=\"div\" />\n            </InputContainer>\n          </LabelInput>\n          <LabelInput>\n            <TitleLable>Password</TitleLable>\n            <InputContainer>\n              <IconUser>\n                <FiPhone />\n              </IconUser>\n              <Input type=\"password\" name=\"password\" />\n              <Error name=\"password\" component=\"div\" />\n            </InputContainer>\n          </LabelInput>\n          <BtnSubmit type=\"submit\">Log In</BtnSubmit>\n        </FormWrap>\n      </Formik>\n    </MainSection>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n"],"names":["MainSection","styled","Title","ContactsTitle","TitleHome","TextHome","MainWrapper","Error","ErrorMessage","FormWrap","Form","Input","Field","LabelInput","BtnSubmit","IconUser","InputContainer","TitleLable","LoginSchema","yup","shape","email","required","password","min","initialValues","name","LoginForm","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","logIn","unwrap","then","Notiflix","catch","console","log","autoComplete","type","component","Login"],"sourceRoot":""}