{"version":3,"file":"static/js/584.1f71bdc2.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm /ContactForm.styled.jsx","components/ContactForm /ContactForm.jsx","components/ContactsItem/ContactsItem.styled.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizeFilter = filter.trim().toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.trim().toLowerCase().includes(normalizeFilter)\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const InputForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n\nexport const InputForContact = styled.input`\n  width: 300px;\n  font-size: 16px;\n  border-radius: 5px;\n  padding: 13px 20px;\n  padding-left: 55px;\n  font-weight: 500;\n  border-radius: 4px;\n  line-height: 22px;\n  letter-spacing: 0.5px;\n  outline: none;\n  color: #c4c3ca;\n  background-color: #1f2029;\n  border: none;\n  transition: all 200ms linear;\n  box-shadow: 0 4px 8px 0 rgba(21, 21, 21, 0.2);\n`;\n\nexport const LabelInputContact = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  color: #c4c3ca;\n`;\nexport const BtnSubmit = styled.button`\n  border-radius: 4px;\n  height: 44px;\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  transition: all 200ms linear;\n  padding: 0 30px;\n  letter-spacing: 1px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border: none;\n  cursor: pointer;\n  background-color: #ffeba7;\n  color: #102770;\n  box-shadow: 0 8px 24px 0 rgba(255, 235, 167, 0.2);\n\n  &:focus,\n  &:hover {\n    background-color: #102770;\n    color: #ffeba7;\n    box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\n  }\n`;\n\nexport const IconUser = styled.i`\n  position: relative;\n  top: 0;\n  left: 10%;\n  font-size: 18px;\n  color: #ffeba7;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nexport const TitleLable = styled.span`\n  margin-left: 20px;\n`;\n","import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/contactsOperation';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Swal from 'sweetalert2';\nimport { FiUser, FiPhone } from 'react-icons/fi';\nimport {\n  InputForm,\n  InputForContact,\n  LabelInputContact,\n  BtnSubmit,\n  IconUser,\n  InputContainer,\n  TitleLable,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    const dublicateOfName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const dublicateOfNumber = contacts.some(\n      contact =>\n        contact.number.replace(/-/g, '').replace(/ /g, '') ===\n        number.replace(/ /g, '').replace(/-/g, '')\n    );\n\n    if (dublicateOfName) {\n      Swal.fire(`${name} is alredy in contacts`);\n      setName('');\n      setNumber('');\n      return false;\n    }\n\n    if (dublicateOfNumber) {\n      Swal.fire(`${number} is alredy in contacts`);\n      setName('');\n      setNumber('');\n      return false;\n    }\n\n    dispatch(addContacts(contact))\n      .unwrap()\n      .then(() => Notiflix.Notify.success('You added new contact!'))\n      .catch(() => Notiflix.Notify.warning('Something went wrong...:('));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <InputForm onSubmit={handleSubmit}>\n      <LabelInputContact>\n        <TitleLable>Name</TitleLable>\n        <InputContainer>\n          <IconUser>\n            <FiUser />\n          </IconUser>\n          <InputForContact\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            placeholder=\"Jack Daniels\"\n          />\n        </InputContainer>\n      </LabelInputContact>\n      <LabelInputContact>\n        <TitleLable>Number</TitleLable>\n        <InputContainer>\n          <IconUser>\n            <FiPhone />\n          </IconUser>\n          <InputForContact\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            placeholder=\"777 77 77\"\n          />\n        </InputContainer>\n      </LabelInputContact>\n      <BtnSubmit type=\"submit\">Add contact</BtnSubmit>\n    </InputForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Name = styled.span`\n  margin-right: 5px;\n  color: #c4c3ca;\n`;\nexport const Number = styled.span`\n  margin-right: 10px;\n  color: #c4c3ca;\n`;\n\nexport const BtnDelete = styled.button`\n  border-radius: 4px;\n  height: 24px;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  transition: all 200ms linear;\n  padding: 0 15px;\n  letter-spacing: 1px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border: none;\n  cursor: pointer;\n  background-color: #ffeba7;\n  color: #102770;\n  box-shadow: 0 8px 24px 0 rgba(255, 235, 167, 0.2);\n\n  &:focus,\n  &:hover {\n    background-color: #102770;\n    color: #ffeba7;\n    box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { deleteContacts } from 'redux/contacts/contactsOperation';\nimport { Name, Number, BtnDelete } from './ContactsItem.styled';\n\nexport const ContactsItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () =>\n    dispatch(deleteContacts(id))\n      .unwrap()\n      .then(() => Notiflix.Notify.failure('Contact deleted'))\n      .catch(() => Notiflix.Notify.warning('Something went wrong...:('));\n\n  return (\n    <>\n      <Name>{name}:</Name> <Number>{number}</Number>\n      <BtnDelete id={id} type=\"button\" onClick={handleDelete}>\n        Delete\n      </BtnDelete>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ol`\n  padding-inline-start: 0;\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactsItem } from 'components/ContactsItem/ContactsItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { List, Item } from '../ContactList/ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  return (\n    <List>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <Item key={id}>\n            <ContactsItem id={id} name={name} number={number} />\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: #c4c3ca;\n`;\nexport const FilterInput = styled.input`\n  width: 300px;\n  font-size: 16px;\n  border-radius: 5px;\n  padding: 13px 20px;\n  padding-left: 55px;\n  font-weight: 500;\n  border-radius: 4px;\n  line-height: 22px;\n  letter-spacing: 0.5px;\n  outline: none;\n  color: #c4c3ca;\n  background-color: #1f2029;\n  border: none;\n  transition: all 200ms linear;\n  box-shadow: 0 4px 8px 0 rgba(21, 21, 21, 0.2);\n`;\n\nexport const IconUser = styled.i`\n  position: relative;\n  top: 0;\n  left: 10%;\n  font-size: 18px;\n  color: #ffeba7;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nexport const TitleLable = styled.span`\n  margin-left: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FiSearch } from 'react-icons/fi';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport {\n  FilterInput,\n  FilterLabel,\n  InputContainer,\n  IconUser,\n  TitleLable,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const getFilteredContacts = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n\n  return (\n    contacts.length > 0 && (\n      <FilterLabel>\n        <TitleLable>Find contacts by name</TitleLable>\n        <InputContainer>\n          <IconUser>\n            <FiSearch />\n          </IconUser>\n          <FilterInput\n            type=\"text\"\n            value={filter}\n            onChange={getFilteredContacts}\n          />\n        </InputContainer>\n      </FilterLabel>\n    )\n  );\n};\n","// import { ContactsTitle, Title } from 'components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm /ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {isLoading && !error && <Loader />}\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizeFilter","trim","toLowerCase","contact","name","includes","InputForm","styled","InputForContact","LabelInputContact","BtnSubmit","IconUser","InputContainer","TitleLable","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","target","value","onSubmit","preventDefault","dublicateOfName","some","dublicateOfNumber","replace","Swal","addContacts","unwrap","then","Notiflix","catch","type","pattern","title","required","onChange","placeholder","Name","Number","BtnDelete","ContactsItem","id","onClick","deleteContacts","List","Item","ContactList","map","FilterLabel","FilterInput","Filter","length","filterContacts","Contacts","useEffect","fetchContacts","Loader"],"sourceRoot":""}