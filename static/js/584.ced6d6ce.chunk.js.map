{"version":3,"file":"static/js/584.ced6d6ce.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","redux/contacts/selectors.js","components/ContactForm /ContactForm.styled.jsx","components/ContactForm /ContactForm.jsx","components/ContactsItem/ContactsItem.styled.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n  margin: 30px auto;\n  width: fit-content;\n  background-color: #2a2b38;\n  background-image: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1462889/pat.svg');\n  border-radius: 5px;\n  background-position: bottom center;\n  background-repeat: no-repeat;\n  background-size: 300%;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 24px;\n  color: #ffeba7;\n  text-align: center;\n`;\n\nexport const ContactsTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #c4c3ca;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizeFilter = filter.trim().toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.trim().toLowerCase().includes(normalizeFilter)\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const InputForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n\nexport const InputForContact = styled.input`\n  width: 300px;\n  font-size: 16px;\n  border-radius: 5px;\n  padding: 13px 20px;\n  padding-left: 55px;\n  font-weight: 500;\n  border-radius: 4px;\n  line-height: 22px;\n  letter-spacing: 0.5px;\n  outline: none;\n  color: #c4c3ca;\n  background-color: #1f2029;\n  border: none;\n  transition: all 200ms linear;\n  box-shadow: 0 4px 8px 0 rgba(21, 21, 21, 0.2);\n`;\n\nexport const LabelInputContact = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  color: #c4c3ca;\n`;\nexport const BtnSubmit = styled.button`\n  border-radius: 4px;\n  height: 44px;\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  transition: all 200ms linear;\n  padding: 0 30px;\n  letter-spacing: 1px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border: none;\n  cursor: pointer;\n  background-color: #ffeba7;\n  color: #102770;\n  box-shadow: 0 8px 24px 0 rgba(255, 235, 167, 0.2);\n\n  &:focus,\n  &:hover {\n    background-color: #102770;\n    color: #ffeba7;\n    box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\n  }\n`;\n\nexport const IconUser = styled.i`\n  position: relative;\n  top: 0;\n  left: 10%;\n  font-size: 18px;\n  color: #ffeba7;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nexport const TitleLable = styled.span`\n  margin-left: 20px;\n`;\n","import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/contactsOperation';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Swal from 'sweetalert2';\nimport { FiUser, FiPhone } from 'react-icons/fi';\nimport {\n  InputForm,\n  InputForContact,\n  LabelInputContact,\n  BtnSubmit,\n  IconUser,\n  InputContainer,\n  TitleLable,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    const dublicateOfName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const dublicateOfNumber = contacts.some(\n      contact =>\n        contact.number.replace(/-/g, '').replace(/ /g, '') ===\n        number.replace(/ /g, '').replace(/-/g, '')\n    );\n\n    if (dublicateOfName) {\n      Swal.fire(`${name} is alredy in contacts`);\n      setName('');\n      setNumber('');\n      return false;\n    }\n\n    if (dublicateOfNumber) {\n      Swal.fire(`${number} is alredy in contacts`);\n      setName('');\n      setNumber('');\n      return false;\n    }\n\n    dispatch(addContacts(contact))\n      .unwrap()\n      .then(() => Notiflix.Notify.success('You added new contact!'))\n      .catch(() => Notiflix.Notify.warning('Something went wrong...:('));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <InputForm onSubmit={handleSubmit}>\n      <LabelInputContact>\n        <TitleLable>Name</TitleLable>\n        <InputContainer>\n          <IconUser>\n            <FiUser />\n          </IconUser>\n          <InputForContact\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            placeholder=\"Jack Daniels\"\n          />\n        </InputContainer>\n      </LabelInputContact>\n      <LabelInputContact>\n        <TitleLable>Number</TitleLable>\n        <InputContainer>\n          <IconUser>\n            <FiPhone />\n          </IconUser>\n          <InputForContact\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            placeholder=\"777 77 77\"\n          />\n        </InputContainer>\n      </LabelInputContact>\n      <BtnSubmit type=\"submit\">Add contact</BtnSubmit>\n    </InputForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Name = styled.span`\n  margin-right: 5px;\n  color: #c4c3ca;\n`;\nexport const Number = styled.span`\n  margin-right: 10px;\n  color: #c4c3ca;\n`;\n\nexport const BtnDelete = styled.button`\n  border-radius: 4px;\n  height: 24px;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  transition: all 200ms linear;\n  padding: 0 15px;\n  letter-spacing: 1px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border: none;\n  cursor: pointer;\n  background-color: #ffeba7;\n  color: #102770;\n  box-shadow: 0 8px 24px 0 rgba(255, 235, 167, 0.2);\n\n  &:focus,\n  &:hover {\n    background-color: #102770;\n    color: #ffeba7;\n    box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\n  }\n`;\n\nexport const BtnUpdate = styled.button`\n  border-radius: 4px;\n  height: 24px;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  transition: all 200ms linear;\n  padding: 0 15px;\n  letter-spacing: 1px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border: none;\n  cursor: pointer;\n  background-color: #ffeba7;\n  color: #102770;\n  box-shadow: 0 8px 24px 0 rgba(255, 235, 167, 0.2);\n\n  &:focus,\n  &:hover {\n    background-color: #102770;\n    color: #ffeba7;\n    box-shadow: 0 8px 24px 0 rgba(16, 39, 112, 0.2);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport {\n  deleteContacts,\n  updateContact,\n} from 'redux/contacts/contactsOperation';\nimport { Name, Number, BtnDelete, BtnUpdate } from './ContactsItem.styled';\n\nexport const ContactsItem = ({ contact }) => {\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const dispatch = useDispatch();\n  const handleDelete = () =>\n    dispatch(deleteContacts(contact.id))\n      .unwrap()\n      .then(() => Notiflix.Notify.failure('Contact deleted'))\n      .catch(() => Notiflix.Notify.warning('Something went wrong...:('));\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleEditContact = () => {\n    if (!isEdit) {\n      setIsEdit(true);\n    } else {\n      setIsEdit(false);\n      dispatch(updateContact({ id: contact.id, name, number }));\n    }\n  };\n\n  const onSubmit = e => {\n    if (e.key !== 'Enter') {\n      return;\n    }\n    handleEditContact();\n  };\n  return (\n    <>\n      {isEdit ? (\n        <form onKeyDown={onSubmit}>\n          <label>\n            Name:\n            <input\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              type=\"text\"\n            />\n          </label>\n          <label>\n            Number\n            <input\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              title=\"Edit phone number\"\n              type=\"tel\"\n            />\n          </label>\n        </form>\n      ) : (\n        <>\n          <Name>{name}:</Name> <Number>{number}</Number>\n        </>\n      )}\n      <BtnDelete type=\"button\" onClick={handleDelete}>\n        Delete\n      </BtnDelete>\n      <BtnUpdate type=\"button\" onClick={handleEditContact}>\n        {isEdit ? <p>Close</p> : <p>Edit</p>}\n      </BtnUpdate>\n    </>\n  );\n};\n\nContactsItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ol`\n  padding-inline-start: 0;\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  gap: 10px;\n`;\n","import { ContactsItem } from 'components/ContactsItem/ContactsItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { List, Item } from '../ContactList/ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  return (\n    <List>\n      {contacts.map(contact => {\n        return (\n          <Item key={contact.id}>\n            <ContactsItem key={contact.id} contact={contact} />\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: #c4c3ca;\n`;\nexport const FilterInput = styled.input`\n  width: 300px;\n  font-size: 16px;\n  border-radius: 5px;\n  padding: 13px 20px;\n  padding-left: 55px;\n  font-weight: 500;\n  border-radius: 4px;\n  line-height: 22px;\n  letter-spacing: 0.5px;\n  outline: none;\n  color: #c4c3ca;\n  background-color: #1f2029;\n  border: none;\n  transition: all 200ms linear;\n  box-shadow: 0 4px 8px 0 rgba(21, 21, 21, 0.2);\n`;\n\nexport const IconUser = styled.i`\n  position: relative;\n  top: 0;\n  left: 10%;\n  font-size: 18px;\n  color: #ffeba7;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nexport const TitleLable = styled.span`\n  margin-left: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FiSearch } from 'react-icons/fi';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport {\n  FilterInput,\n  FilterLabel,\n  InputContainer,\n  IconUser,\n  TitleLable,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const getFilteredContacts = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n\n  return (\n    contacts.length > 0 && (\n      <FilterLabel>\n        <TitleLable>Find contacts by name</TitleLable>\n        <InputContainer>\n          <IconUser>\n            <FiSearch />\n          </IconUser>\n          <FilterInput\n            type=\"text\"\n            value={filter}\n            onChange={getFilteredContacts}\n          />\n        </InputContainer>\n      </FilterLabel>\n    )\n  );\n};\n","// import { ContactsTitle, Title } from 'components/App/App.styled';\nimport { ContactsTitle, MainSection, Title } from 'components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm /ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <MainSection>\n      <Title>MY PHONEBOOK</Title>\n      <ContactForm />\n      <ContactsTitle>Contacts</ContactsTitle>\n      {isLoading && !error && <Loader />}\n      <Filter />\n      <ContactList />\n    </MainSection>\n  );\n}\n"],"names":["MainSection","styled","Title","ContactsTitle","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizeFilter","trim","toLowerCase","contact","name","includes","InputForm","InputForContact","LabelInputContact","BtnSubmit","IconUser","InputContainer","TitleLable","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","target","value","onSubmit","preventDefault","dublicateOfName","some","dublicateOfNumber","replace","Swal","addContacts","unwrap","then","Notiflix","catch","type","pattern","title","required","onChange","placeholder","Name","Number","BtnDelete","BtnUpdate","ContactsItem","isEdit","setIsEdit","e","handleEditContact","updateContact","id","onKeyDown","key","onClick","deleteContacts","List","Item","ContactList","map","FilterLabel","FilterInput","Filter","length","filterContacts","Contacts","useEffect","fetchContacts","Loader"],"sourceRoot":""}